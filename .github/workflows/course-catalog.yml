name: Course Catalog

on:
  push:
    branch:
      - "master"
  pull_request:
    branch:
      - "master"
  workflow_dispatch: #manualmente

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker Build 
        run: docker build -t course-catalog:actions-0.${GITHUB_SHA} .

      - name: Unit Test      
        run: |
          docker run --rm -v "${{ github.workspace }}:/course-catalog/" course-catalog:actions-0.${GITHUB_SHA} \
            nosetests --with-xunit --with-coverage --cover-package=project test_users.py
  sonar-analysis:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Install SonarScanner
        run: | 
          # Atualiza o DNS
          sudo sed -i '/nameserver/ c\nameserver 8.8.8.8\nnameserver 8.8.4.4' /etc/resolv.conf

          # Instalar as depedências necessárias
          sudo apt update -y && sudo apt install -y zip wget unzip curl

          # Baixar e instalar o SonarScanner
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip -d /opt
          rm sonar-scanner-cli-4.8.0.2856-linux.zip 

          # Adiciona o SonarScanner ao PATH
          export PATH="/opt/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
      - name: SonarScanner Analysis
        run: |
          export PATH="/opt/sonar-scanner-4.8.0.2856-linux/bin:$PATH" && \
          sonar-scanner \
            -Dsonar.projectKey=$SONAR_PROJECT_KEY \
            -Dsonar.sources=. \
            -Dsonar.host.url=$SONAR_URL \
            -Dsonar.login=$SONAR_TOKEN
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_URL: ${{ secrets.SONAR_URL }}
          SONAR_PROJECT_KEY: ${{ secrets.SONAR_PROJECT_KEY }}
  build_push_nexus:
    runs-on: ubuntu-latest
    needs: sonar-analysis
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Docker Build
        run: docker build -t course-catalog:actions-0.${GITHUB_SHA} .
      - name: Configure insecure-registries
        run: |
          echo '{"insecure-registries": ["35.224.51.209:8082", "35.224.51.209:8083"]}' | sudo tee /etc/docker/daemon.json
          sudo systemctl restart docker
      - name: Docker Login
        run: echo "$DOCKER_PASSWORD" | docker login -u $DOCKER_USER --password-stdin 35.224.51.209:8082
        env:
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD}}
          DOCKER_USER: ${{ secrets.DOCKER_USER }}


      