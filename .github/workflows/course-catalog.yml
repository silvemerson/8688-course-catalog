name: Course Catalog

on:
  push:
    branch:
      - "master"
  pull_request:
    branch:
      - "master"
  workflow_dispatch: #manualmente

jobs:
  # build-and-test:
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Docker Build 
  #       run: docker build -t course-catalog:actions-0.${GITHUB_SHA} .

  #     - name: Unit Test      
  #       run: |
  #         docker run --rm -v "${{ github.workspace }}:/course-catalog/" course-catalog:actions-0.${GITHUB_SHA} \
  #           nosetests --with-xunit --with-coverage --cover-package=project test_users.py
  sonar-analysis:
    runs-on: ubuntu-latest
    # needs: build-and-test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Install SonarScanner
        run: |
          # Atualiza os repositórios DNS para evitar problemas de conexão
          sudo sed -i '/nameserver/ c\nameserver 8.8.8.8\nnameserver 8.8.4.4' /etc/resolv.conf
          
          # Instala as dependências necessárias
          sudo apt update -y && sudo apt install -y zip wget unzip curl

          # Baixa e instala o SonarScanner
          wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.8.0.2856-linux.zip
          unzip sonar-scanner-cli-4.8.0.2856-linux.zip -d /opt
          rm sonar-scanner-cli-4.8.0.2856-linux.zip

          # Adiciona o SonarScanner ao PATH
          export PATH="/opt/sonar-scanner-4.8.0.2856-linux/bin:$PATH"
          
          # Verifica se o SonarScanner está instalado corretamente
          sonar-scanner --version

      - name: Run SonarScanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          echo "Running SonarScanner..."
          sonar-scanner \
            -Dsonar.host.url=http://35.224.51.209:9000/ \
            -Dsonar.projectKey=courseCatalog \
            -Dsonar.sources=. \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}